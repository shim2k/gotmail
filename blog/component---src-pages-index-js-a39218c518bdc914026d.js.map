{"version":3,"sources":["webpack:///./src/components/landing-bio.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Container","Object","styled_base_browser_esm","target","name","styles","NavLink","Link","OuterContainer","Description","NameHeader","ArticleDate","MarkerHeader","ReadingTime","propTypes","siteTitle","PropTypes","string","defaultProps","LandingBio","core_browser_esm","gatsby_browser_entry","query","render","data","to","site","siteMetadata","title","style","marginTop","allMarkdownRemark","edges","map","_ref2","node","key","id","frontmatter","path","css","_ref","date","fields","readingTime","text","excerpt","_2241338634","IndexPage","layout","seo","keywords","landing_bio","loader","enqueue","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","Content","SiteHeader","Header","GatsbyLink","Email","Footer","Layout","react_default","header","layout_Content","href","_1146590423"],"mappings":"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","file":"component---src-pages-index-js-a39218c518bdc914026d.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql, Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport { css } from \"@emotion/core\"\n\nconst Container = styled.div`\n  text-align: left;\n`\n\nconst NavLink = styled(Link)`\n  color: black;\n  margin-bottom: 10px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst OuterContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  flex-direction: row;\n  height: 72vh;\n`\n\nconst Description = styled.p`\n  padding: 0;\n  margin-bottom: 1rem;\n  font-size: 1.5rem;\n`\n\nconst NameHeader = styled.h1`\n  font-size: 2.5rem;\n  margin-bottom: 0;\n`\n\n\nconst ArticleDate = styled.h5`\n  display: inline;\n  color: #606060;\n  margin-bottom: 10px;\n`\n\nconst MarkerHeader = styled.h3`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  margin-bottom: 10px;\n    \n  background-image: linear-gradient(\n    -100deg,\n    rgba(150, 196, 255,0.1),\n    rgba(150, 196, 255, 0.2) 100%,\n    rgba(150, 196, 255,0.15)\n  );\n  \n`\n\nconst ReadingTime = styled.h5`\n  display: inline;\n  color: #606060;\n  margin-bottom: 10px;\n`\n\nconst LandingBio = () => (\n  <StaticQuery\n    query={graphql`\n      query LandingSiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n            allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            path\n          }\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt\n        }\n      }\n    }\n\n      }\n    `}\n    render={data => (\n      <OuterContainer>\n        <Container>\n          <NameHeader>\n            <NavLink to=\"/\">{data.site.siteMetadata.title}</NavLink>\n          </NameHeader>\n          <Description>Software Developer</Description>\n          <div style={{marginTop: 50}}>\n            {\n              data.allMarkdownRemark.edges.map(({ node }) => (\n                <div key={node.id}>\n                  <Link\n                    to={node.frontmatter.path}\n                    css={css`\n                text-decoration: none;\n                color: inherit;\n              `}\n                  >\n                    <MarkerHeader>{node.frontmatter.title} </MarkerHeader>\n                    <div>\n                      <ArticleDate>{node.frontmatter.date}</ArticleDate>\n                      <ReadingTime> - {node.fields.readingTime.text}</ReadingTime>\n                    </div>\n                    <p>{node.excerpt}</p>\n                  </Link>\n                </div>\n              ))}\n          </div>\n        </Container>\n\n      </OuterContainer>\n    )}\n  />\n)\n\nNameHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nNameHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default LandingBio\n","import React from \"react\"\n\nimport LandingBio from \"../components/landing-bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`shim2k`, `portfolio`, `software developer`, `web developer`]} />\n    <LandingBio />\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Content = styled.div`\n  max-width: 860px;\n  padding: 1rem 1.0875rem;\n  font-size: 1.2rem;\n`\n\nconst NavLink = styled(Link)`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst HomeLink = styled(NavLink)`\n  margin-left: 0;\n`\n\nconst SiteHeader = styled.header`\n  background: transparent;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n`\n\nconst Header = ({ siteTitle }) => (\n  <SiteHeader>\n    <Content>\n    </Content>\n  </SiteHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 0 1.0875rem 1rem;\n  padding-top: 0;\n`\n\nconst GatsbyLink = styled.a`\n  margin-left: 5px;\n`\n\nconst Email = styled.div`\n  display: flex;\n  margin-top: 5px;\n  color: gray;\n  justify-content: center;\n`\n\nconst Footer = styled.footer`\n  display: flex;\n  justify-content: center;\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            path\n          }\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt\n        }\n      }\n    }\n\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Content>\n          <main>{children}</main>\n        </Content>\n        <Footer>\n          <GatsbyLink href=\"https://twitter.com/shim2k\">@shim2k</GatsbyLink>\n          <GatsbyLink href=\"https://github.com/Shim2k\">github.com/shim2k</GatsbyLink>\n        </Footer>\n        <Email>shim2k@gmail.com</Email>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}